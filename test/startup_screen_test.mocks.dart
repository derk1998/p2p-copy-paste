// Mocks generated by Mockito 5.4.4 from annotations
// in p2p_copy_paste/test/startup_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;
import 'package:p2p_copy_paste/services/authentication.dart' as _i4;
import 'package:p2p_copy_paste/services/storage.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [IStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIStorageService extends _i1.Mock implements _i2.IStorageService {
  MockIStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [IAuthenticationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIAuthenticationService extends _i1.Mock
    implements _i4.IAuthenticationService {
  MockIAuthenticationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> signInAnonymously() => (super.noSuchMethod(
        Invocation.method(
          #signInAnonymously,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  String getUserId() => (super.noSuchMethod(
        Invocation.method(
          #getUserId,
          [],
        ),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.method(
            #getUserId,
            [],
          ),
        ),
      ) as String);

  @override
  void setOnLoginStateChangedListener(
          void Function(_i4.LoginState)? onLoginStateChangedListener) =>
      super.noSuchMethod(
        Invocation.method(
          #setOnLoginStateChangedListener,
          [onLoginStateChangedListener],
        ),
        returnValueForMissingStub: null,
      );
}
